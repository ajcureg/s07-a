/*CSS Reset*/
*{
	margin: 0;
	/*margin property changes the amount of the space between the border and its surrounding elements. This is commonly used to create a space between elements*/
	padding: 0;
	/*padding property changes the amount of space between the border and the content of an element. This is commonly used to position the contents of an element*/
	box-sizing: border-box;
	/*box sizing property defines how the width and height of an element are calculated. This allow us to control the measurements of the elements better. The value border box includes the padding and border properties of an element to the total height and width in it's computation.
	This can be translated to the "total width/height of an element is (num) which includes the padding and border " as opposed to its initial context of "The total width/ height of an element is (num) PLUS the padding and the border.*/
}


body{
	font-family: 'Open Sans', sans-serif;
}

nav {
	/*shorthand property*/
	padding: 0.8rem;
	/*shirt hand properties */

	/*properties that make up the "padding" property*/
	/*padding-top: 10px;
	padding-right: 20px;
	padding-left: 30px;
	padding-bottom: 40px;*/

	margin-bottom: 2rem;
	border-bottom: 1px solid gray;
	list-style-type: none;
}

nav .nav, nav .nav-logo {
		display: inline;
		/*inline changes the li elements into inline elements. By default li elements are block elements. This makes all the list items appear beside one another.*/
		margin: 0.5rem;
}

#intro {
	text-align: center;
	padding-left: 10%;
	padding right: 10%;
	padding-top: 2rem;
	padding-bottom: 3rem;
}

/*margin vs padding*/
/*margin is best used when creating space between elements*/
/*padding is best used when creating space between an element's border snd it's content*/


/*The padding left, right, top, and bottom may be used in this situation since the values are different.*/
/*10% value is used to make the page responsive to the screen size. It generates it's value based on the parent element which is the body tag, which spans the whole width of the page*/

.header {
	text-align: center;
}

#intro h2, #intro p {
	margin-bottom: 1rem;
}

#intro button {
	padding: 1rem;
	/*if 2 values
	first value:  top, bottom
	2nd value:  left, right


	top, left, right, bottom*/
	color: white;
	background-color: #c2195b;
	border-radius: 25px;
	font-weight: bold;
}

#succeed-info {
	/*padding-left: 10%;
	padding-right: 10%;
	padding-top: 2rem;
	padding-bottom: 3rem;*/

	padding: 2rem 10% 3rem;
}

#succeed-info h2{
	margin-bottom: 1rem;
}

#succeed-info h3{

	text-align: center;
	margin-bottom: 1rem;
}

#succeed-info .card {
	/*allow the cards to appear beside each other*/
	display: inline-block;

	/*aligns elements with the tallest element in line. Used with the "inline-block" values*/
	vertical-align: top;

	/*width property uses the "%" value which divides the whole width of the container into 3 parts because we are horizontally aligning 3 components*/
	width: 30%;
	margin-left: 0.5rem;
	margin-right: 0.5rem;
	/*allows the cards to have equal height that adjust with the content*/
	min-height: 175px;
}

footer {
	padding: 0.7rem;
	text-align: center;
}

footer span {
	margin-left: 0.5rem;
	margin-right: 0.5rem;
}


/*Activity:


1. Add a CSS rule for the pre-footer section to create space for the content, change the background to #002540 and text color to white.
2. Add a CSS rule for the div tags to align the elements horizontally.
3. Add a CSS rule for all elements inside the div tags to create space between them vertically
4. Create a git repository named s07-a in gitlab and github
5. Push the changes to git
6. Go to the github > settings > Pages and copy the link hosted project
7. Copy the link and paste it to Boodle named CSS - Box Model
*/

#pre-footer div {
	display: inline-block;
	vertical-align: top;
	width: 23%;
	margin-left: 0.5rem;
	margin-right: 0.5rem;
	min-height: 100px;
}

#pre-footer{
	color: white;
	background-color: #002540;
	padding: 2rem 10%;
}
